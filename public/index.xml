<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Florent Collin</title>
    <link>/</link>
    <description>Recent content on Florent Collin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>florentcollinpro@gmail.com (FlorentCollin)</managingEditor>
    <webMaster>florentcollinpro@gmail.com (FlorentCollin)</webMaster>
    <copyright>2022 Florent Collin All rights reserved</copyright>
    <lastBuildDate>Sun, 20 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cave Generator Built Using the Bevy Game Engine</title>
      <link>/2022/02/20/cave-generator/</link>
      <pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate>
      <author>florentcollinpro@gmail.com (FlorentCollin)</author>
      <guid>/2022/02/20/cave-generator/</guid>
      <description>As you might already know, Bevy is a relatively new game engine written in Rust using a Data Driven approach. This blog post is an introduction to Bevy showing how to build a Cave Generator based on a cellular automaton. Even if you are not familiar with cellular automata, you probably already have heard about the Game of Life of John Conway.
All the code used in this tutorial is available on GitHub, feel free to clone and play with it.</description>
    </item>
    
  </channel>
</rss>
